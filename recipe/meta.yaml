# Note: we use this variable everywhere except in outputs names as jinja variables in output names are not supported
# by migrators, see https://github.com/conda-forge/librobometry-feedstock/pull/20#issuecomment-2041618340
{% set name = "bipedal-locomotion-framework" %}
{% set namecxx = "libbipedal-locomotion-framework" %}
{% set namepython = "bipedal-locomotion-framework-python" %}
{% set version = "0.19.0" %}

package:
  name: bipedal-locomotion-framework-split
  version: {{ version }}

source:
  url: https://github.com/ami-iit/bipedal-locomotion-framework/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 0366fb751aaac0ec0a2cb8ef6d56af4527b822b80d104d747f9c1c1f77718282
  patches:
    - 891.patch

build:
  number: 3

outputs:
  # {{ namecxx }}
  - name: libbipedal-locomotion-framework
    script: build_cxx.sh  # [unix]
    script: bld_cxx.bat  # [win]
    build:
      run_exports:
        - {{ pin_subpackage(namecxx, max_pin='x.x.x') }}
      # catch2 is used just for tests, we do not actually link the C++ library
      ignore_run_exports:
        - catch2
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - cmake==3.29.0
        - pkg-config
        - ninja
        # YARP idl tools are used in this recipe
        - libyarp  # [build_platform != target_platform]
        # PCL requires Qt's tools
        - qt6-main  # [build_platform != target_platform and not ppc64le]
      host:
        - eigen
        - idyntree
        - manif
        - libyarp
        - tomlplusplus
        - librobometry
        - fmt
        - spdlog
        - cppad
        - manif
        - nlohmann_json
        - libosqp
        - osqp-eigen
        - libmatio-cpp
        - tomlplusplus
        - casadi
        - qhull
        - libopencv
        - pcl
        - onnxruntime-cpp
        - tiny-process-library
        - libgl-devel  # [linux]
        # Only required for testing
        - catch2
        # transitive public dependency of pcl
        - vtk-base
        - liblie-group-controllers
        - libunicycle-footstep-planner
        - librealsense  # [not win]
        - xorg-libxfixes  # [linux]
        # Workaround for https://github.com/conda-forge/pcl-feedstock/pull/68
        - vtk-base * qt*  # [not win]
        # Workaround
        - vtk-base * *206*  # [not win]
      run:
        # manif and eigen are mentioned in the headers so needed when building
        # against libbipedal-locomotion-framework
        - manif
        - eigen
        - liblie-group-controllers
        - tomlplusplus
        # Workaround for https://github.com/conda-forge/pcl-feedstock/pull/68
        - vtk-base * qt*  # [not win]

    test:
      commands:
        - test -f ${PREFIX}/include/BipedalLocomotion/System/Advanceable.h  # [unix]
        - test -f ${PREFIX}/lib/libBipedalLocomotionFrameworkSystem${SHLIB_EXT}  # [unix]
        - test -f ${PREFIX}/lib/cmake/BipedalLocomotionFramework/BipedalLocomotionFrameworkConfig.cmake  # [not win]
        - if not exist %PREFIX%\\Library\\include\\BipedalLocomotion\\System\\Advanceable.h exit 1  # [win]
        - if not exist %PREFIX%\\Library\\lib\\BipedalLocomotionFrameworkSystem.lib exit 1  # [win]
        - if not exist %PREFIX%\\Library\\bin\\BipedalLocomotionFrameworkSystem.dll exit 1  # [win]
        - if not exist %PREFIX%\\Library\\CMake\\BipedalLocomotionFrameworkConfig.cmake exit 1  # [win]

  # {{ namepython }}
  - name: bipedal-locomotion-framework-python
    script: build_py.sh  # [unix]
    script: bld_py.bat  # [win]
    build:
      # icub-models is used just for tests, we do not actually link the C++ library
      ignore_run_exports:
        - icub-models
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib("c") }}
        - {{ compiler('cxx') }}
        - pybind11
        - pybind11-abi
        - ninja
        - cmake==3.29.0
        - python                                 # [build_platform != target_platform]
        - cross-python_{{ target_platform }}     # [build_platform != target_platform]
        - pybind11                               # [build_platform != target_platform]
        - pybind11-abi                           # [build_platform != target_platform]
        # PCL requires Qt's tools
        - qt6-main  # [build_platform != target_platform and not ppc64le]
      host:
        - {{ pin_subpackage(namecxx, exact=True) }}
        - python
        # Workaround for https://github.com/conda-forge/pybind11-feedstock/pull/94#issuecomment-2033804227
        - pybind11 <2.12.0
        - pybind11-abi
        - liblie-group-controllers
        - libyarp
        - tomlplusplus
        - idyntree
        - fmt
        - spdlog
        - libopencv
        # Workaround for https://github.com/conda-forge/bipedal-locomotion-framework-feedstock/issues/37
        - libmatio-cpp
        # Workaround for https://github.com/conda-forge/bipedal-locomotion-framework-feedstock/pull/42#issuecomment-1804057782
        - casadi
        - libboost-devel
        - pugixml
        - pcl
        - libgl-devel  # [linux]
        - xorg-libxfixes  # [linux]
        - icub-models # Requested just for tests
        - scipy # Requested just for tests
        - pytest # Requested just for tests
        - manifpy # Requested just for tests
        - numpy
      run:
        - {{ pin_subpackage(namecxx, exact=True) }}
        - python
        - manifpy
        - idyntree
    test:
      commands:
        - test $(pip list | grep bipedal_locomotion_framework | tr -s " " | grep $PKG_VERSION | wc -l) -eq 1  # [unix]
        - pip check
      requires:
        - pip
      imports:
        - bipedal_locomotion_framework

  # {{ name }}
  - name: bipedal-locomotion-framework
    build:
      run_exports:
        - {{ pin_subpackage(namecxx, max_pin='x.x.x') }}
    requirements:
      run:
        - {{ pin_subpackage(namecxx, exact=True) }}
        # Workaround for       # Workaround for https://github.com/conda-forge/bipedal-locomotion-framework-feedstock/pull/85#issuecomment-2364616366
        - {{ pin_subpackage(namepython, max_pin='x.x.x') }}
    test:
      imports:
        - bipedal_locomotion_framework
        - bipedal_locomotion_framework.bindings.contacts
        - bipedal_locomotion_framework.bindings.continuous_dynamical_system
        - bipedal_locomotion_framework.bindings.conversions
        - bipedal_locomotion_framework.bindings.floating_base_estimators
        - bipedal_locomotion_framework.bindings.ik
        - bipedal_locomotion_framework.bindings.math
        - bipedal_locomotion_framework.bindings.ml
        - bipedal_locomotion_framework.bindings.parameters_handler
        - bipedal_locomotion_framework.bindings.planners
        - bipedal_locomotion_framework.bindings.reduced_model_controllers
        - bipedal_locomotion_framework.bindings.robot_interface
        - bipedal_locomotion_framework.bindings.simplified_model_controllers
        - bipedal_locomotion_framework.bindings.system
        - bipedal_locomotion_framework.bindings.text_logging
        - bipedal_locomotion_framework.bindings.tsid
        - bipedal_locomotion_framework.bindings.yarp_utilities

about:
  home: https://github.com/ami-iit/bipedal-locomotion-framework
  license: BSD-3-Clause
  license_file:
    - LICENSE
  summary: Suite of libraries for achieving bipedal locomotion on humanoid robots.


extra:
  recipe-maintainers:
    - traversaro
    - GiulioRomualdi
